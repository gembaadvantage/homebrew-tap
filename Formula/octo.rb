# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Octo < Formula
  desc "Generate idiomatic Go files from AWS CloudFormation specifications"
  homepage "https://github.com/gembaadvantage/octo"
  version "0.1.0"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/gembaadvantage/octo/releases/download/0.1.0/octo_0.1.0_darwin-amd64.tar.gz"
      sha256 "5c186f1e5c551b303f55bbe2d4ac5e6e1bbfed2358efa7903d6ed7ae468b8aa0"

      def install
        bin.install "octo"
        bash_output = Utils.safe_popen_read(bin/"octo", "completion", "bash")
        (bash_completion/"octo").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"octo", "completion", "zsh")
        (zsh_completion/"_octo").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"octo", "completion", "fish")
        (fish_completion/"octo.fish").write fish_output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/gembaadvantage/octo/releases/download/0.1.0/octo_0.1.0_darwin-arm64.tar.gz"
      sha256 "d79bb324943fe7802504a3660f05602d61e5dde57cb6e3c0ebb07a69342269dc"

      def install
        bin.install "octo"
        bash_output = Utils.safe_popen_read(bin/"octo", "completion", "bash")
        (bash_completion/"octo").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"octo", "completion", "zsh")
        (zsh_completion/"_octo").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"octo", "completion", "fish")
        (fish_completion/"octo.fish").write fish_output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/gembaadvantage/octo/releases/download/0.1.0/octo_0.1.0_linux-amd64.tar.gz"
      sha256 "1488b6dcae022193944407290b919719660554348e4a030ad7e8c3d36a3b9962"

      def install
        bin.install "octo"
        bash_output = Utils.safe_popen_read(bin/"octo", "completion", "bash")
        (bash_completion/"octo").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"octo", "completion", "zsh")
        (zsh_completion/"_octo").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"octo", "completion", "fish")
        (fish_completion/"octo.fish").write fish_output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/gembaadvantage/octo/releases/download/0.1.0/octo_0.1.0_linux-arm64.tar.gz"
      sha256 "502f626174b3936626100d2b4bcd1865119577d16f763d6c2b376d624d304a23"

      def install
        bin.install "octo"
        bash_output = Utils.safe_popen_read(bin/"octo", "completion", "bash")
        (bash_completion/"octo").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"octo", "completion", "zsh")
        (zsh_completion/"_octo").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"octo", "completion", "fish")
        (fish_completion/"octo.fish").write fish_output
      end
    end
  end

  test do
    installed_version = shell_output("#{bin}/octo version --short 2>&1")
    assert_match "v#{version}", installed_version
  end
end
