# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Octo < Formula
  desc "Generate idiomatic Go files from AWS CloudFormation specifications"
  homepage "https://github.com/gembaadvantage/octo"
  version "0.5.0"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/gembaadvantage/octo/releases/download/v0.5.0/octo_0.5.0_darwin-arm64.tar.gz"
      sha256 "62e2f75998ac47ffcd4dc5369938952e7cfdd393a4e9f776982ad92e1a894173"

      def install
        bin.install "octo"
        bash_output = Utils.safe_popen_read(bin/"octo", "completion", "bash")
        (bash_completion/"octo").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"octo", "completion", "zsh")
        (zsh_completion/"_octo").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"octo", "completion", "fish")
        (fish_completion/"octo.fish").write fish_output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/gembaadvantage/octo/releases/download/v0.5.0/octo_0.5.0_darwin-amd64.tar.gz"
      sha256 "90170a780360f4a06c94cd91034c370fc1516969ec86441e463f762f6c9d7866"

      def install
        bin.install "octo"
        bash_output = Utils.safe_popen_read(bin/"octo", "completion", "bash")
        (bash_completion/"octo").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"octo", "completion", "zsh")
        (zsh_completion/"_octo").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"octo", "completion", "fish")
        (fish_completion/"octo.fish").write fish_output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/gembaadvantage/octo/releases/download/v0.5.0/octo_0.5.0_linux-amd64.tar.gz"
      sha256 "1b0f3f9f9761f06cb9811eb5b8072bb9fbc090ae6e50442565b0e3f604f9f237"

      def install
        bin.install "octo"
        bash_output = Utils.safe_popen_read(bin/"octo", "completion", "bash")
        (bash_completion/"octo").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"octo", "completion", "zsh")
        (zsh_completion/"_octo").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"octo", "completion", "fish")
        (fish_completion/"octo.fish").write fish_output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/gembaadvantage/octo/releases/download/v0.5.0/octo_0.5.0_linux-arm64.tar.gz"
      sha256 "9585a7ded542d9ee7c8950ff1911e3ec550fa682b09dadcb1982ef31083661ba"

      def install
        bin.install "octo"
        bash_output = Utils.safe_popen_read(bin/"octo", "completion", "bash")
        (bash_completion/"octo").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"octo", "completion", "zsh")
        (zsh_completion/"_octo").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"octo", "completion", "fish")
        (fish_completion/"octo.fish").write fish_output
      end
    end
  end

  test do
    installed_version = shell_output("#{bin}/octo version --short 2>&1")
    assert_match "v#{version}", installed_version
  end
end
