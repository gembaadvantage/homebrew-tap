# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Octo < Formula
  desc "Generate idiomatic Go files from AWS CloudFormation specifications"
  homepage "https://github.com/gembaadvantage/octo"
  version "0.3.0"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/gembaadvantage/octo/releases/download/v0.3.0/octo_0.3.0_darwin-arm64.tar.gz"
      sha256 "f74989b1d292a7f5221b446045dc7dbd6c7e40bdd6510c5fe5de064982843f60"

      def install
        bin.install "octo"
        bash_output = Utils.safe_popen_read(bin/"octo", "completion", "bash")
        (bash_completion/"octo").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"octo", "completion", "zsh")
        (zsh_completion/"_octo").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"octo", "completion", "fish")
        (fish_completion/"octo.fish").write fish_output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/gembaadvantage/octo/releases/download/v0.3.0/octo_0.3.0_darwin-amd64.tar.gz"
      sha256 "edc34bb951cf3b7909c561e8f74c9d0abee908bf797e1de53380276d82021f31"

      def install
        bin.install "octo"
        bash_output = Utils.safe_popen_read(bin/"octo", "completion", "bash")
        (bash_completion/"octo").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"octo", "completion", "zsh")
        (zsh_completion/"_octo").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"octo", "completion", "fish")
        (fish_completion/"octo.fish").write fish_output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/gembaadvantage/octo/releases/download/v0.3.0/octo_0.3.0_linux-amd64.tar.gz"
      sha256 "80779428f2b2fc5e315c6c4e07b7b42bf549f82be1fd9688a63c5d719497912e"

      def install
        bin.install "octo"
        bash_output = Utils.safe_popen_read(bin/"octo", "completion", "bash")
        (bash_completion/"octo").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"octo", "completion", "zsh")
        (zsh_completion/"_octo").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"octo", "completion", "fish")
        (fish_completion/"octo.fish").write fish_output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/gembaadvantage/octo/releases/download/v0.3.0/octo_0.3.0_linux-arm64.tar.gz"
      sha256 "dcf214a7e2eede8bed081a6f1fbf230d0380a40bad684193ee05c112822db194"

      def install
        bin.install "octo"
        bash_output = Utils.safe_popen_read(bin/"octo", "completion", "bash")
        (bash_completion/"octo").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"octo", "completion", "zsh")
        (zsh_completion/"_octo").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"octo", "completion", "fish")
        (fish_completion/"octo.fish").write fish_output
      end
    end
  end

  test do
    installed_version = shell_output("#{bin}/octo version --short 2>&1")
    assert_match "v#{version}", installed_version
  end
end
