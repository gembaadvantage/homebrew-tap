# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Octo < Formula
  desc "Generate idiomatic Go files from AWS CloudFormation specifications"
  homepage "https://github.com/gembaadvantage/octo"
  version "0.2.0"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/gembaadvantage/octo/releases/download/0.2.0/octo_0.2.0_darwin-amd64.tar.gz"
      sha256 "e8cdd918b3b2a0f07000f2a56754d626c38a011968e3b5c4f005e20f37ce8525"

      def install
        bin.install "octo"
        bash_output = Utils.safe_popen_read(bin/"octo", "completion", "bash")
        (bash_completion/"octo").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"octo", "completion", "zsh")
        (zsh_completion/"_octo").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"octo", "completion", "fish")
        (fish_completion/"octo.fish").write fish_output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/gembaadvantage/octo/releases/download/0.2.0/octo_0.2.0_darwin-arm64.tar.gz"
      sha256 "f4871a0251bae2cac29a047663b3274a1a5468530e4bd2396e6e1428fed78c34"

      def install
        bin.install "octo"
        bash_output = Utils.safe_popen_read(bin/"octo", "completion", "bash")
        (bash_completion/"octo").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"octo", "completion", "zsh")
        (zsh_completion/"_octo").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"octo", "completion", "fish")
        (fish_completion/"octo.fish").write fish_output
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/gembaadvantage/octo/releases/download/0.2.0/octo_0.2.0_linux-arm64.tar.gz"
      sha256 "3547bb1e08da4913f1dfed86f3adf1110bc12768aa45686c387f5a422a4cc428"

      def install
        bin.install "octo"
        bash_output = Utils.safe_popen_read(bin/"octo", "completion", "bash")
        (bash_completion/"octo").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"octo", "completion", "zsh")
        (zsh_completion/"_octo").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"octo", "completion", "fish")
        (fish_completion/"octo.fish").write fish_output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/gembaadvantage/octo/releases/download/0.2.0/octo_0.2.0_linux-amd64.tar.gz"
      sha256 "a215e1316f7873cecc0016c396fd0b6d70f6d91ee26aab78dbb676d858605f1e"

      def install
        bin.install "octo"
        bash_output = Utils.safe_popen_read(bin/"octo", "completion", "bash")
        (bash_completion/"octo").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"octo", "completion", "zsh")
        (zsh_completion/"_octo").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"octo", "completion", "fish")
        (fish_completion/"octo.fish").write fish_output
      end
    end
  end

  test do
    installed_version = shell_output("#{bin}/octo version --short 2>&1")
    assert_match "v#{version}", installed_version
  end
end
