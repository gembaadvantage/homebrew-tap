# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Uplift < Formula
  desc "Semantic versioning the easy way"
  homepage "https://github.com/gembaadvantage/uplift"
  version "1.1.0"
  license "MIT"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/gembaadvantage/uplift/releases/download/v1.1.0/uplift_1.1.0_darwin-x86_64.tar.gz"
      sha256 "9f79fb9dbf43db34284d31af3e7eb7e8b74980aa9e1d5ded49a2e01dfb814b09"
    end
    if Hardware::CPU.arm?
      url "https://github.com/gembaadvantage/uplift/releases/download/v1.1.0/uplift_1.1.0_darwin-arm64.tar.gz"
      sha256 "a29df9d2fa115fc736ef69a89f3f755246f4399ea491954ac8a2517884616148"
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/gembaadvantage/uplift/releases/download/v1.1.0/uplift_1.1.0_linux-arm64.tar.gz"
      sha256 "5407e81dbc1ae9fa5a71625f884fd7277214205d0f29cb78c01fe75640ca06d4"
    end
    if Hardware::CPU.intel?
      url "https://github.com/gembaadvantage/uplift/releases/download/v1.1.0/uplift_1.1.0_linux-x86_64.tar.gz"
      sha256 "c03ed1fdbbea0751da11bdb566bdd255e2851c9886b432a67110762d08179f78"
    end
  end

  depends_on "go" => :optional
  depends_on "git"

  def install
    bin.install "uplift"

    bash_output = Utils.safe_popen_read(bin/"uplift", "completion", "bash")
    (bash_completion/"uplift").write bash_output

    zsh_output = Utils.safe_popen_read(bin/"uplift", "completion", "zsh")
    (zsh_completion/"_uplift").write zsh_output

    fish_output = Utils.safe_popen_read(bin/"uplift", "completion", "fish")
    (fish_completion/"uplift.fish").write fish_output
  end

  test do
    installed_version = shell_output("#{bin}/uplift version --short 2>&1")
    assert_match "v#{version}", installed_version
  end
end
