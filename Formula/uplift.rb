# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Uplift < Formula
  desc "Semantic versioning the easy way. Powered by Conventional Commits. Built for use with CI"
  homepage "https://upliftci.dev"
  version "2.24.1"
  license "MIT"

  depends_on "git"

  on_macos do
    on_intel do
      url "https://github.com/gembaadvantage/uplift/releases/download/v2.24.1/uplift_2.24.1_darwin-x86_64.tar.gz"
      sha256 "2acdbe1c1a80047029e70d62293f4f83bafdbb32b1596e0e3817666dd09010d8"

      def install
        bin.install "uplift"

        bash_output = Utils.safe_popen_read(bin/"uplift", "completion", "bash")
        (bash_completion/"uplift").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"uplift", "completion", "zsh")
        (zsh_completion/"_uplift").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"uplift", "completion", "fish")
        (fish_completion/"uplift.fish").write fish_output

        man1.install "manpages/uplift.1.gz"
      end
    end
    on_arm do
      url "https://github.com/gembaadvantage/uplift/releases/download/v2.24.1/uplift_2.24.1_darwin-arm64.tar.gz"
      sha256 "78f95c5a3cd89b42337c572bfa6f73181e3632fc289ae2de15350d6c69cdfd88"

      def install
        bin.install "uplift"

        bash_output = Utils.safe_popen_read(bin/"uplift", "completion", "bash")
        (bash_completion/"uplift").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"uplift", "completion", "zsh")
        (zsh_completion/"_uplift").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"uplift", "completion", "fish")
        (fish_completion/"uplift.fish").write fish_output

        man1.install "manpages/uplift.1.gz"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/gembaadvantage/uplift/releases/download/v2.24.1/uplift_2.24.1_linux-x86_64.tar.gz"
        sha256 "4f09461fc592d0164a9ab614ac571ed6f7e9622700cc238add40c31a001a8f9e"

        def install
          bin.install "uplift"

          bash_output = Utils.safe_popen_read(bin/"uplift", "completion", "bash")
          (bash_completion/"uplift").write bash_output

          zsh_output = Utils.safe_popen_read(bin/"uplift", "completion", "zsh")
          (zsh_completion/"_uplift").write zsh_output

          fish_output = Utils.safe_popen_read(bin/"uplift", "completion", "fish")
          (fish_completion/"uplift.fish").write fish_output

          man1.install "manpages/uplift.1.gz"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/gembaadvantage/uplift/releases/download/v2.24.1/uplift_2.24.1_linux-arm64.tar.gz"
        sha256 "ddb13a99d61c80a7fcd00f5dfae86f1d36a9f588192866e19071b8e5de23640d"

        def install
          bin.install "uplift"

          bash_output = Utils.safe_popen_read(bin/"uplift", "completion", "bash")
          (bash_completion/"uplift").write bash_output

          zsh_output = Utils.safe_popen_read(bin/"uplift", "completion", "zsh")
          (zsh_completion/"_uplift").write zsh_output

          fish_output = Utils.safe_popen_read(bin/"uplift", "completion", "fish")
          (fish_completion/"uplift.fish").write fish_output

          man1.install "manpages/uplift.1.gz"
        end
      end
    end
  end

  test do
    installed_version = shell_output("#{bin}/uplift version --short 2>&1")
    assert_match "v#{version}", installed_version
  end
end
