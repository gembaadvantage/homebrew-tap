# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Uplift < Formula
  desc "Semantic versioning the easy way. Powered by Conventional Commits. Built for use with CI"
  homepage "https://upliftci.dev"
  version "2.26.0"
  license "MIT"

  depends_on "git"

  on_macos do
    on_intel do
      url "https://github.com/gembaadvantage/uplift/releases/download/v2.26.0/uplift_2.26.0_darwin-x86_64.tar.gz"
      sha256 "5ffcf6db21123c2ca5fbe4068d4320f81fefb23a43e1e57f6c7c597a251a4adb"

      def install
        bin.install "uplift"

        bash_output = Utils.safe_popen_read(bin/"uplift", "completion", "bash")
        (bash_completion/"uplift").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"uplift", "completion", "zsh")
        (zsh_completion/"_uplift").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"uplift", "completion", "fish")
        (fish_completion/"uplift.fish").write fish_output

        man1.install "manpages/uplift.1.gz"
      end
    end
    on_arm do
      url "https://github.com/gembaadvantage/uplift/releases/download/v2.26.0/uplift_2.26.0_darwin-arm64.tar.gz"
      sha256 "434c3534143cc6ea6150d79355ed6b0e13a7f54d0d865f6c5fe77d3eda1d4e4b"

      def install
        bin.install "uplift"

        bash_output = Utils.safe_popen_read(bin/"uplift", "completion", "bash")
        (bash_completion/"uplift").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"uplift", "completion", "zsh")
        (zsh_completion/"_uplift").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"uplift", "completion", "fish")
        (fish_completion/"uplift.fish").write fish_output

        man1.install "manpages/uplift.1.gz"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/gembaadvantage/uplift/releases/download/v2.26.0/uplift_2.26.0_linux-x86_64.tar.gz"
        sha256 "5f73377964099946bfa4188f4d0502bf1b8b90c26babe250db0cdbe1318c54ef"

        def install
          bin.install "uplift"

          bash_output = Utils.safe_popen_read(bin/"uplift", "completion", "bash")
          (bash_completion/"uplift").write bash_output

          zsh_output = Utils.safe_popen_read(bin/"uplift", "completion", "zsh")
          (zsh_completion/"_uplift").write zsh_output

          fish_output = Utils.safe_popen_read(bin/"uplift", "completion", "fish")
          (fish_completion/"uplift.fish").write fish_output

          man1.install "manpages/uplift.1.gz"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/gembaadvantage/uplift/releases/download/v2.26.0/uplift_2.26.0_linux-arm64.tar.gz"
        sha256 "9ab7691cc2d46482b20f975d1726c9bd07fdb57e3e0250ea7d28b1cdf8718da6"

        def install
          bin.install "uplift"

          bash_output = Utils.safe_popen_read(bin/"uplift", "completion", "bash")
          (bash_completion/"uplift").write bash_output

          zsh_output = Utils.safe_popen_read(bin/"uplift", "completion", "zsh")
          (zsh_completion/"_uplift").write zsh_output

          fish_output = Utils.safe_popen_read(bin/"uplift", "completion", "fish")
          (fish_completion/"uplift.fish").write fish_output

          man1.install "manpages/uplift.1.gz"
        end
      end
    end
  end

  test do
    installed_version = shell_output("#{bin}/uplift version --short 2>&1")
    assert_match "v#{version}", installed_version
  end
end
