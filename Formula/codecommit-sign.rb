# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class CodecommitSign < Formula
  desc "Generate a signed AWS V4 CodeCommit URL directly from an IAM role. No dedicated CodeCommit credentials needed"
  homepage "https://github.com/gembaadvantage/codecommit-sign"
  version "1.3.1"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/gembaadvantage/codecommit-sign/releases/download/v1.3.1/codecommit-sign_1.3.1_darwin-arm64.tar.gz"
      sha256 "d21df149560dbce707ac05fb02615a3570f8f18e917f722e2dbe783c6c066691"

      def install
        bin.install "codecommit-sign"

        bash_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "bash")
        (bash_completion/"codecommit-sign").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "zsh")
        (zsh_completion/"_codecommit-sign").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "fish")
        (fish_completion/"codecommit-sign.fish").write fish_output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/gembaadvantage/codecommit-sign/releases/download/v1.3.1/codecommit-sign_1.3.1_darwin-x86_64.tar.gz"
      sha256 "76aed2db0df1cfac07cddd9f2ad53ff92c34b92a471355f9ef27afba9ebc61f5"

      def install
        bin.install "codecommit-sign"

        bash_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "bash")
        (bash_completion/"codecommit-sign").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "zsh")
        (zsh_completion/"_codecommit-sign").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "fish")
        (fish_completion/"codecommit-sign.fish").write fish_output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/gembaadvantage/codecommit-sign/releases/download/v1.3.1/codecommit-sign_1.3.1_linux-x86_64.tar.gz"
      sha256 "c68cb734c306bd1da161f0115ec529b4bcdd331297bbab6139cf1bc1a68f9894"

      def install
        bin.install "codecommit-sign"

        bash_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "bash")
        (bash_completion/"codecommit-sign").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "zsh")
        (zsh_completion/"_codecommit-sign").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "fish")
        (fish_completion/"codecommit-sign.fish").write fish_output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/gembaadvantage/codecommit-sign/releases/download/v1.3.1/codecommit-sign_1.3.1_linux-arm64.tar.gz"
      sha256 "f697c679ca44d6228c560866d43eda4d4fd7cb6bead465f607e55245c971ea56"

      def install
        bin.install "codecommit-sign"

        bash_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "bash")
        (bash_completion/"codecommit-sign").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "zsh")
        (zsh_completion/"_codecommit-sign").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "fish")
        (fish_completion/"codecommit-sign.fish").write fish_output
      end
    end
  end

  test do
    installed_version = shell_output("#{bin}/codecommit-sign version --short 2>&1")
    assert_match "v#{version}", installed_version
  end
end
