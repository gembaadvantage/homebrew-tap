# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class CodecommitSign < Formula
  desc "Generate a signed AWS V4 CodeCommit URL directly from an IAM role. No dedicated CodeCommit credentials needed"
  homepage "https://github.com/gembaadvantage/codecommit-sign"
  version "1.3.1"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/gembaadvantage/codecommit-sign/releases/download/v1.3.1/codecommit-sign_1.3.1_darwin-x86_64.tar.gz"
      sha256 "736047af3ceedceff49587d052b4bd733acf033e3a2063e805d3a081aa056249"

      def install
        bin.install "codecommit-sign"

        bash_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "bash")
        (bash_completion/"codecommit-sign").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "zsh")
        (zsh_completion/"_codecommit-sign").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "fish")
        (fish_completion/"codecommit-sign.fish").write fish_output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/gembaadvantage/codecommit-sign/releases/download/v1.3.1/codecommit-sign_1.3.1_darwin-arm64.tar.gz"
      sha256 "fe973e2d3bc58cf0d92c1f4ff2f8e1ef1372c5c8f1facddab7be79d6469192ec"

      def install
        bin.install "codecommit-sign"

        bash_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "bash")
        (bash_completion/"codecommit-sign").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "zsh")
        (zsh_completion/"_codecommit-sign").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "fish")
        (fish_completion/"codecommit-sign.fish").write fish_output
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/gembaadvantage/codecommit-sign/releases/download/v1.3.1/codecommit-sign_1.3.1_linux-arm64.tar.gz"
      sha256 "246397941c74e3fcc264ceab65d75439b2493876ae1aa2ba5b1bcd6c37baed0f"

      def install
        bin.install "codecommit-sign"

        bash_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "bash")
        (bash_completion/"codecommit-sign").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "zsh")
        (zsh_completion/"_codecommit-sign").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "fish")
        (fish_completion/"codecommit-sign.fish").write fish_output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/gembaadvantage/codecommit-sign/releases/download/v1.3.1/codecommit-sign_1.3.1_linux-x86_64.tar.gz"
      sha256 "0172331620f5ab218e44182128e5909a809db285098c628700df6f455a6b617a"

      def install
        bin.install "codecommit-sign"

        bash_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "bash")
        (bash_completion/"codecommit-sign").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "zsh")
        (zsh_completion/"_codecommit-sign").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"codecommit-sign", "completion", "fish")
        (fish_completion/"codecommit-sign.fish").write fish_output
      end
    end
  end

  test do
    installed_version = shell_output("#{bin}/codecommit-sign version --short 2>&1")
    assert_match "v#{version}", installed_version
  end
end
